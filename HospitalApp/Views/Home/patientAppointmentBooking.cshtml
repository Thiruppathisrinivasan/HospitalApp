@model HospitalApp.Models.AppointmentModel

@{
    ViewBag.Title = "patientAppointmentBooking";
}
<style>
    textarea {
  resize: none;
  width:500px;
}
</style>
<div class="container  mt-3">
    <h2 class="text-center mb-3">patientAppointmentBooking</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row ">


            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@




            <div class="col-md-2">
                <label class="form-label">Select Specialist Type</label>
                <div class="">
                    @Html.DropDownListFor(model => model.Category, new SelectList(ViewBag.DoctorCategory, "Name", "Name"),"select specialist type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-2">
                <label class="form-label">select Doctor</label>
                <div class="">
                    @Html.EditorFor(model => model.Doctor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Doctor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
               <label class="form-label">Appointment Date</label>
                 <div class="">
                    @Html.TextBoxFor(model => model.date, new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
             <label class="form-label">Select Time Slot </label>
                   <div class="">
                    @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-10 d-flex align-items-center mt-3">
               <label class="form-label p-2 d-flex flex-column"><span>Description About Appointment</span><span class="bg-primary-subtle p-2">eg:fever,cold etc....</span><span class="bg-primary-subtle p-2">mention for how manydays etc..</span></label>
                 <div class="p-2">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "3", cols = "200" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-10">
                <div class="col-md-offset-2 ">
                    <input type="submit" value="submit" class="btn btn-primary mt-2" />
                    <input type="button" value="clear" id="clearbtn" class="btn btn-secondary mt-2"/> 
                </div>
            </div>
        </div>
    }
</div>
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

<script src="~/Scripts/jquery-2.0.0.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script>
    $(document).ready(function () {
        let currentDate = new Date();
        let year = currentDate.getFullYear();
        let month = currentDate.getMonth() + 1;
        let day = currentDate.getDate();
        month = month < 10 ? "0" + month : month;
        day = day < 10 ? "0" + day : day;

        let formattedCurrentDate = `${year}-${month}-${day}`;


        $("#date").attr('min', formattedCurrentDate);


        let nextWeekDate = new Date(currentDate);
        nextWeekDate.setDate(nextWeekDate.getDate() + 7);
        let nextWeekYear = nextWeekDate.getFullYear();
        let nextWeekMonth = nextWeekDate.getMonth() + 1;
        let nextWeekDay = nextWeekDate.getDate();
        nextWeekMonth = nextWeekMonth < 10 ? "0" + nextWeekMonth : nextWeekMonth;
        nextWeekDay = nextWeekDay < 10 ? "0" + nextWeekDay : nextWeekDay;
        let formattedNextWeekDate = `${nextWeekYear}-${nextWeekMonth}-${nextWeekDay}`;
        $("#date").attr('max', formattedNextWeekDate);
       
        $("#Category").val("");
        $("#Doctor").val("");
        $("#date").val("");
        $("#Time").val("");
        $("#Description").val("");



    });
    $("#clearbtn").click(function () {
        $("#Category").val("");
        $("#Doctor").val("");
        $("#date").val("");
        $("#Time").val("");
        $("#Description").val("");

    });
</script>